{"ast":null,"code":"var _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\React\\\\next-movie-app\\\\pages\\\\index\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport API_KEY from '../API_KEY';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleChange\", e => {\n      const val = e.target.value;\n      this.setState({\n        isLoading: true\n      });\n      this.setState(state => {\n        if (this.state.search.length >= 3) this.getMovieList();\n        return {\n          search: val\n        };\n      });\n    });\n  }\n\n  static async getInitialProps(something) {\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\n    const data = await res.json();\n    console.log(this.props);\n    return {\n      movieList: data.Search,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {// this.getMovieList()\n  }\n\n  render() {\n    const {\n      movieList\n    } = this.props;\n    const {\n      search\n    } = this.props;\n    const {\n      isLoading\n    } = this.props;\n    const listing = movieList.length && movieList.map((item, index) => __jsx(\"div\", {\n      className: \"col-3\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      className: \"card-img-top\",\n      src: item.Poster,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(\"h6\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, item.Title), __jsx(\"span\", {\n      className: \"badge badge-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, item.Type), __jsx(\"a\", {\n      href: \"/\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"View Details\")))));\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      minLength: \"3\",\n      value: search,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), isLoading ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }\n    }, \"Loading\") : __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, listing)));\n  }\n\n}\n/*\r\nconst Index = (props) => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            {\r\n                (props.movieList.length) && props.movieList.map(item=>(\r\n                    <div className=\"col-4\" key={item.imdbID}>\r\n                        <div className=\"card\">\r\n                                <img  className=\"card-img-top\" src={item.Poster} alt=\"\" /> \r\n                            <div className=\"card-body\">\r\n                                <h3>{item.Title}</h3>\r\n                                <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <input className=\"form-control\" type=\"search\" />\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async function(){\r\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {\r\n        movieList: data.Search\r\n    };\r\n}*/\n\n\nexport default Index;","map":{"version":3,"sources":["F:/xampp/htdocs/React/next-movie-app/pages/index/index.js"],"names":["Layout","fetch","API_KEY","Index","React","Component","e","val","target","value","setState","isLoading","state","search","length","getMovieList","getInitialProps","something","res","data","json","console","log","props","movieList","Search","componentDidMount","render","listing","map","item","index","Poster","Title","Type","handleChange"],"mappings":"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","sourcesContent":["import Layout from '../../components/Layout'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport API_KEY from '../API_KEY';\r\n\r\nclass Index extends React.Component{\r\n  \r\n    static async getInitialProps(something) {\r\n        const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n        const data = await res.json();\r\n        console.log(this.props)\r\n        return{\r\n            movieList: data.Search,\r\n            isLoading:false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.getMovieList()\r\n    }\r\n\r\n   \r\n    handleChange = (e) =>{\r\n        const val = e.target.value\r\n        this.setState({\r\n            isLoading:true\r\n        })\r\n        this.setState(state=>{\r\n            if(this.state.search.length >=3)\r\n            this.getMovieList()\r\n            return {\r\n                search: val\r\n            }\r\n        })\r\n       \r\n    }\r\n    render(){\r\n        const { movieList } = this.props;\r\n        const { search } = this.props;\r\n        const { isLoading } = this.props;\r\n\r\n        const listing = (movieList.length) && movieList.map((item, index)=>(\r\n            <div className=\"col-3\" key={index}>\r\n                <div className=\"card\">\r\n                        <img  className=\"card-img-top\" src={item.Poster} alt=\"\" /> \r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\">{item.Title}</h6>\r\n                        <span className=\"badge badge-danger\">{item.Type}</span>\r\n                        <a href=\"/\" className=\"btn btn-primary\">View Details</a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return(\r\n            <Layout>\r\n            \r\n            <div className=\"container\">\r\n                <input type=\"text\" minLength=\"3\" value={search} onChange={(e) => this.handleChange(e) } />\r\n                {\r\n                    isLoading ? (<div>Loading</div>) :\r\n                    (\r\n                    <div className=\"row\">\r\n                        {listing}\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nconst Index = (props) => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            {\r\n                (props.movieList.length) && props.movieList.map(item=>(\r\n                    <div className=\"col-4\" key={item.imdbID}>\r\n                        <div className=\"card\">\r\n                                <img  className=\"card-img-top\" src={item.Poster} alt=\"\" /> \r\n                            <div className=\"card-body\">\r\n                                <h3>{item.Title}</h3>\r\n                                <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <input className=\"form-control\" type=\"search\" />\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async function(){\r\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {\r\n        movieList: data.Search\r\n    };\r\n}*/\r\nexport default Index"]},"metadata":{},"sourceType":"module"}