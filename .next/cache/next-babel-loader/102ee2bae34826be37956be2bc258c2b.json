{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\React\\\\next-movie-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport API_KEY from './API_KEY';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getInitialProps\", function _callee() {\n      var res, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?apikey=\".concat(API_KEY, \"&page=1&s=abc\")));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n              return _context.abrupt(\"return\", {\n                movieList: data.Search\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var movieList = this.props.movieList;\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, movieList.length && movieList.map(function (item) {\n        return __jsx(\"div\", {\n          className: \"col-4\",\n          key: item.imdbID,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 33\n          }\n        }, __jsx(\"img\", {\n          className: \"card-img-top\",\n          src: item.Poster,\n          alt: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 41\n          }\n        }), __jsx(\"div\", {\n          className: \"card-body\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 37\n          }\n        }, __jsx(\"h3\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 41\n          }\n        }, item.Title), __jsx(\"span\", {\n          className: \"badge bandge-danger\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 41\n          }\n        }, item.Type))));\n      })), __jsx(\"input\", {\n        className: \"form-control\",\n        type: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n/*const Index = (props) => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            {\r\n                (props.movieList.length) && props.movieList.map(item=>(\r\n                    <div className=\"col-4\" key={item.imdbID}>\r\n                        <div className=\"card\">\r\n                                <img  className=\"card-img-top\" src={item.Poster} alt=\"\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>{item.Title}</h3>\r\n                                <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <input className=\"form-control\" type=\"search\" />\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async function(){\r\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {\r\n        movieList: data.Search\r\n    };\r\n}*/\n\n\nexport default Index;","map":{"version":3,"sources":["F:/xampp/htdocs/React/next-movie-app/pages/index.js"],"names":["Layout","fetch","API_KEY","Index","props","res","json","data","console","log","movieList","Search","length","map","item","imdbID","Poster","Title","Type","React","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAGMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,sEA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACIH,KAAK,0CAAmCC,OAAnC,mBADT;;AAAA;AACRG,cAAAA,GADQ;AAAA;AAAA,+CAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERC,cAAAA,IAFQ;AAGdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHc,+CAIP;AACHG,gBAAAA,SAAS,EAAEH,IAAI,CAACI;AADb,eAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5BA;;AAAA;AAEjB;;;;6BACO;AAAA;;AAAA,UACID,SADJ,GACkB,KAAKN,KADvB,CACIM,SADJ;AAEJ,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKA,SAAS,CAACE,MAAX,IAAsBF,SAAS,CAACG,GAAV,CAAc,UAAAC,IAAI;AAAA,eACpC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,GAAG,EAAEA,IAAI,CAACC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,GAAG,EAAED,IAAI,CAACE,MAAzC;AAAiD,UAAA,GAAG,EAAC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR,EAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,KAAV,CADJ,EAEI;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCH,IAAI,CAACI,IAA5C,CAFJ,CAFJ,CADJ,CADoC;AAAA,OAAlB,CAF1B,CADJ,EAgBI;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ,CADJ;AAsBH;;;;EA5BeC,KAAK,CAACC,S;AAsC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,eAAejB,KAAf","sourcesContent":["import Layout from '../components/Layout'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport API_KEY from './API_KEY';\r\n\r\n\r\nclass Index extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const { movieList } = this.props\r\n        return(\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    {\r\n                        (movieList.length) && movieList.map(item=>(\r\n                            <div className=\"col-4\" key={item.imdbID}>\r\n                                <div className=\"card\">\r\n                                        <img  className=\"card-img-top\" src={item.Poster} alt=\"\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h3>{item.Title}</h3>\r\n                                        <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    </div>\r\n                    <input className=\"form-control\" type=\"search\" />\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n    getInitialProps = async function(){\r\n        const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n        const data = await res.json();\r\n        console.log(data)\r\n        return {\r\n            movieList: data.Search\r\n        };\r\n    }\r\n}\r\n/*const Index = (props) => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            {\r\n                (props.movieList.length) && props.movieList.map(item=>(\r\n                    <div className=\"col-4\" key={item.imdbID}>\r\n                        <div className=\"card\">\r\n                                <img  className=\"card-img-top\" src={item.Poster} alt=\"\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>{item.Title}</h3>\r\n                                <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <input className=\"form-control\" type=\"search\" />\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async function(){\r\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {\r\n        movieList: data.Search\r\n    };\r\n}*/\r\nexport default Index"]},"metadata":{},"sourceType":"module"}