{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\React\\\\next-movie-app\\\\pages\\\\index\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport API_KEY from './API_KEY';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      search: \"Abc\",\n      movieList: [],\n      isLoading: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var val = e.target.value;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      _this.setState(function (state) {\n        if (_this.state.search.length >= 3) _this.getMovieList();\n        return {\n          search: val\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMovieList();\n    }\n  }, {\n    key: \"getMovieList\",\n    value: function getMovieList() {\n      var res, data;\n      return _regeneratorRuntime.async(function getMovieList$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?apikey=\".concat(API_KEY, \"&page=1&s=\").concat(this.state.search)));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              this.setState({\n                movieList: data.Search ? data.Search : [],\n                isLoading: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var movieList = this.state.movieList;\n      var search = this.state.search;\n      var isLoading = this.state.isLoading;\n      var listing = movieList.length && movieList.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"col-3\",\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, __jsx(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }, __jsx(\"img\", {\n          className: \"card-img-top\",\n          src: item.Poster,\n          alt: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        }), __jsx(\"div\", {\n          className: \"card-body\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, __jsx(\"h6\", {\n          className: \"card-title\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, item.Title), __jsx(\"span\", {\n          className: \"badge badge-danger\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, item.Type), __jsx(\"a\", {\n          href: \"/\",\n          className: \"btn btn-primary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }, \"View Details\"))));\n      });\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        minLength: \"3\",\n        value: search,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), isLoading ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 30\n        }\n      }, \"Loading\") : __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }\n      }, listing)));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n/*\r\nconst Index = (props) => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            {\r\n                (props.movieList.length) && props.movieList.map(item=>(\r\n                    <div className=\"col-4\" key={item.imdbID}>\r\n                        <div className=\"card\">\r\n                                <img  className=\"card-img-top\" src={item.Poster} alt=\"\" /> \r\n                            <div className=\"card-body\">\r\n                                <h3>{item.Title}</h3>\r\n                                <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <input className=\"form-control\" type=\"search\" />\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async function(){\r\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {\r\n        movieList: data.Search\r\n    };\r\n}*/\n\n\nexport default Index;","map":{"version":3,"sources":["F:/xampp/htdocs/React/next-movie-app/pages/index/index.js"],"names":["Layout","fetch","API_KEY","Index","search","movieList","isLoading","e","val","target","value","setState","state","length","getMovieList","res","json","data","Search","listing","map","item","index","Poster","Title","Type","handleChange","React","Component"],"mappings":"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","sourcesContent":["import Layout from '../components/Layout'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport API_KEY from './API_KEY';\r\n\r\nclass Index extends React.Component{\r\n    state = {\r\n        search:\"Abc\",\r\n        movieList:[],\r\n        isLoading:true\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.getMovieList()\r\n    }\r\n    async getMovieList(){\r\n        const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=${this.state.search}`);\r\n        const data = await res.json();\r\n        this.setState({\r\n            movieList: (data.Search)?data.Search :[],\r\n            isLoading:false\r\n        })\r\n        \r\n    }\r\n    handleChange = (e) =>{\r\n        const val = e.target.value\r\n        this.setState({\r\n            isLoading:true\r\n        })\r\n        this.setState(state=>{\r\n            if(this.state.search.length >=3)\r\n            this.getMovieList()\r\n            return {\r\n                search: val\r\n            }\r\n        })\r\n       \r\n    }\r\n    render(){\r\n        const { movieList } = this.state;\r\n        const { search } = this.state;\r\n        const { isLoading } = this.state;\r\n\r\n        const listing = (movieList.length) && movieList.map((item, index)=>(\r\n            <div className=\"col-3\" key={index}>\r\n                <div className=\"card\">\r\n                        <img  className=\"card-img-top\" src={item.Poster} alt=\"\" /> \r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\">{item.Title}</h6>\r\n                        <span className=\"badge badge-danger\">{item.Type}</span>\r\n                        <a href=\"/\" className=\"btn btn-primary\">View Details</a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return(\r\n            <Layout>\r\n            \r\n            <div className=\"container\">\r\n                <input type=\"text\" minLength=\"3\" value={search} onChange={(e) => this.handleChange(e) } />\r\n\r\n                {\r\n                isLoading ? (<div>Loading</div>) :\r\n                (<div className=\"row\">\r\n                    {listing}\r\n                </div>)\r\n                }\r\n            </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nconst Index = (props) => (\r\n    <Layout>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            {\r\n                (props.movieList.length) && props.movieList.map(item=>(\r\n                    <div className=\"col-4\" key={item.imdbID}>\r\n                        <div className=\"card\">\r\n                                <img  className=\"card-img-top\" src={item.Poster} alt=\"\" /> \r\n                            <div className=\"card-body\">\r\n                                <h3>{item.Title}</h3>\r\n                                <span className=\"badge bandge-danger\">{item.Type}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n            <input className=\"form-control\" type=\"search\" />\r\n        </div>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async function(){\r\n    const res = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&page=1&s=abc`);\r\n    const data = await res.json();\r\n    console.log(data)\r\n    return {\r\n        movieList: data.Search\r\n    };\r\n}*/\r\nexport default Index"]},"metadata":{},"sourceType":"module"}